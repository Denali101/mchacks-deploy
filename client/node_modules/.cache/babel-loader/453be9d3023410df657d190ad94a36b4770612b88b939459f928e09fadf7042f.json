{"ast":null,"code":"var _jsxFileName = \"/Users/denalitran-le/Documents/GitHub/mchacks/client/src/components/ProviderView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, Select, Stack, Text, useToast, VStack, Table, Thead, Tbody, Tr, Th, Td, Grid, GridItem, Editable, EditableInput, EditablePreview, Tabs, TabList, TabPanels, Tab, TabPanel, Center, HStack } from '@chakra-ui/react';\nimport { useSocket } from '../contexts/SocketContext';\nimport { TRIAGE_LEVELS, PatientStatus, PATIENT_STATUS_LABELS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProviderView = () => {\n  _s();\n  const {\n    isProvider,\n    authenticateProvider,\n    addPatient,\n    updateTriageLevel,\n    updateStatus,\n    updateWaitTimes,\n    patients\n  } = useSocket();\n  const [password, setPassword] = useState('');\n  const [newPatient, setNewPatient] = useState({\n    name: '',\n    symptoms: '',\n    triageLevel: '3'\n  });\n  const toast = useToast();\n  const handleLogin = async () => {\n    const success = await authenticateProvider(password);\n    if (!success) {\n      toast({\n        title: 'Authentication failed',\n        status: 'error',\n        duration: 3000\n      });\n    }\n  };\n  const handleAddPatient = async () => {\n    try {\n      await addPatient(newPatient.name, newPatient.symptoms.split(',').map(s => s.trim()), Number(newPatient.triageLevel));\n      setNewPatient({\n        name: '',\n        symptoms: '',\n        triageLevel: '3'\n      });\n      toast({\n        title: 'Patient added successfully',\n        status: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      toast({\n        title: 'Error adding patient',\n        status: 'error',\n        duration: 3000\n      });\n    }\n  };\n  if (!isProvider) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleLogin();\n        },\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          maxW: \"400px\",\n          mx: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xl\",\n            children: \"Provider Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"blue\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n  const renderPatientTable = statusFilter => /*#__PURE__*/_jsxDEV(Table, {\n    variant: \"simple\",\n    children: [/*#__PURE__*/_jsxDEV(Thead, {\n      children: /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Th, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Triage Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Symptoms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Wait Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Th, {\n          children: \"Patient ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n      children: patients.filter(p => p.status === statusFilter).sort((a, b) => a.triageLevel - b.triageLevel).map(patient => /*#__PURE__*/_jsxDEV(Tr, {\n        children: [/*#__PURE__*/_jsxDEV(Td, {\n          children: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: patient.triageLevel,\n            onChange: e => updateTriageLevel(patient.id, Number(e.target.value)),\n            variant: \"filled\",\n            bg: patient.triageLevel === 1 ? 'blue.100' : patient.triageLevel === 2 ? 'red.100' : patient.triageLevel === 3 ? 'yellow.100' : patient.triageLevel === 4 ? 'green.100' : 'gray.100',\n            _hover: {\n              bg: patient.triageLevel === 1 ? 'blue.200' : patient.triageLevel === 2 ? 'red.200' : patient.triageLevel === 3 ? 'yellow.200' : patient.triageLevel === 4 ? 'green.200' : 'gray.200'\n            },\n            size: \"sm\",\n            width: \"250px\",\n            borderRadius: \"md\",\n            fontWeight: \"medium\",\n            color: patient.triageLevel === 1 ? 'blue.800' : patient.triageLevel === 2 ? 'red.800' : patient.triageLevel === 3 ? 'yellow.800' : patient.triageLevel === 4 ? 'green.800' : 'gray.800',\n            children: Object.entries(TRIAGE_LEVELS).map(([level, description]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: level,\n              children: [level, \" - \", description]\n            }, level, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: patient.symptoms.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: [patient.estimatedWaitTime, \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: patient.status,\n            onChange: e => updateStatus(patient.id, e.target.value),\n            variant: \"filled\",\n            size: \"sm\",\n            width: \"200px\",\n            borderRadius: \"md\",\n            fontWeight: \"medium\",\n            children: Object.entries(PATIENT_STATUS_LABELS).map(([status, label]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: label\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Td, {\n          children: patient.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    m: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"390px\",\n        templateRows: \"repeat(20, 1fr)\",\n        templateColumns: \"repeat(20, 1fr)\",\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 11,\n          rowSpan: 18,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                mb: 3,\n                children: \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 4,\n                maxW: \"600px\",\n                m: 2,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: \"Patient Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: newPatient.name,\n                    onChange: e => setNewPatient({\n                      ...newPatient,\n                      name: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: \"Symptoms (comma-separated)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: newPatient.symptoms,\n                    onChange: e => setNewPatient({\n                      ...newPatient,\n                      symptoms: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: \"Triage Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: newPatient.triageLevel,\n                    onChange: e => setNewPatient({\n                      ...newPatient,\n                      triageLevel: e.target.value\n                    }),\n                    children: Object.entries(TRIAGE_LEVELS).map(([level, description]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: level,\n                      children: [level, \" - \", description]\n                    }, level, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"blue\",\n                  onClick: handleAddPatient,\n                  children: \"Add Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 9,\n          rowSpan: 7,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                mb: 3,\n                children: \"Report Average Waiting Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Editable, {\n                  fontSize: \"2xl\",\n                  defaultValue: \"5\",\n                  mb: 3,\n                  onChange: value => updateWaitTimes(value),\n                  children: [/*#__PURE__*/_jsxDEV(EditablePreview, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(EditableInput, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"2xl\",\n                  mb: 3,\n                  children: \" minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colStart: 12,\n          colEnd: 21,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                mb: 3,\n                children: \"Total Number of Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                mb: 3,\n                children: patients.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        mb: 4,\n        children: \"Current Patients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: [\"Waiting (\", patients.filter(p => p.status === PatientStatus.WAITING).length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: [\"In Appointment (\", patients.filter(p => p.status === PatientStatus.IN_APPOINTMENT).length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: [\"Awaiting Results (\", patients.filter(p => p.status === PatientStatus.AWAITING_RESULTS).length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: [\"Ready for Discharge (\", patients.filter(p => p.status === PatientStatus.READY_FOR_DISCHARGE).length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: renderPatientTable(PatientStatus.WAITING)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: renderPatientTable(PatientStatus.IN_APPOINTMENT)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: renderPatientTable(PatientStatus.AWAITING_RESULTS)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: renderPatientTable(PatientStatus.READY_FOR_DISCHARGE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s(ProviderView, \"ynC3qaHx7DGGO9KB8hAqdvRSBSY=\", false, function () {\n  return [useSocket, useToast];\n});\n_c = ProviderView;\nvar _c;\n$RefreshReg$(_c, \"ProviderView\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","Select","Stack","Text","useToast","VStack","Table","Thead","Tbody","Tr","Th","Td","Grid","GridItem","Editable","EditableInput","EditablePreview","Tabs","TabList","TabPanels","Tab","TabPanel","Center","HStack","useSocket","TRIAGE_LEVELS","PatientStatus","PATIENT_STATUS_LABELS","jsxDEV","_jsxDEV","ProviderView","_s","isProvider","authenticateProvider","addPatient","updateTriageLevel","updateStatus","updateWaitTimes","patients","password","setPassword","newPatient","setNewPatient","name","symptoms","triageLevel","toast","handleLogin","success","title","status","duration","handleAddPatient","split","map","s","trim","Number","error","p","children","onSubmit","e","preventDefault","spacing","maxW","mx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","autoFocus","colorScheme","renderPatientTable","statusFilter","variant","filter","sort","a","b","patient","id","bg","_hover","size","width","borderRadius","fontWeight","color","Object","entries","level","description","join","estimatedWaitTime","label","m","h","templateRows","templateColumns","gap","colSpan","rowSpan","mb","onClick","defaultValue","colStart","colEnd","length","WAITING","IN_APPOINTMENT","AWAITING_RESULTS","READY_FOR_DISCHARGE","_c","$RefreshReg$"],"sources":["/Users/denalitran-le/Documents/GitHub/mchacks/client/src/components/ProviderView.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormLabel,\n    Input,\n    Select,\n    Stack,\n    Text,\n    useToast,\n    VStack,\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Grid,\n    GridItem,\n    Editable,\n    EditableInput,\n    EditablePreview,\n    Tabs,\n    TabList,\n    TabPanels,\n    Tab,\n    TabPanel,\n    Center,\n    HStack,\n} from '@chakra-ui/react';\nimport { useSocket } from '../contexts/SocketContext';\nimport { TRIAGE_LEVELS, TriageLevel, PatientStatus, PATIENT_STATUS_LABELS } from '../types';\n\nexport const ProviderView: React.FC = () => {\n    const {\n        isProvider,\n        authenticateProvider,\n        addPatient,\n        updateTriageLevel,\n        updateStatus,\n        updateWaitTimes,\n        patients\n    } = useSocket();\n\n    const [password, setPassword] = useState('');\n    const [newPatient, setNewPatient] = useState({\n        name: '',\n        symptoms: '',\n        triageLevel: '3' as unknown as TriageLevel,\n    });\n\n    const toast = useToast();\n\n    const handleLogin = async () => {\n        const success = await authenticateProvider(password);\n        if (!success) {\n            toast({\n                title: 'Authentication failed',\n                status: 'error',\n                duration: 3000,\n            });\n        }\n    };\n\n    const handleAddPatient = async () => {\n        try {\n            await addPatient(\n                newPatient.name,\n                newPatient.symptoms.split(',').map(s => s.trim()),\n                Number(newPatient.triageLevel) as 1 | 2 | 3 | 4 | 5\n            );\n            setNewPatient({\n                name: '',\n                symptoms: '',\n                triageLevel: '3' as unknown as TriageLevel,\n            });\n            toast({\n                title: 'Patient added successfully',\n                status: 'success',\n                duration: 3000,\n            });\n        } catch (error) {\n            toast({\n                title: 'Error adding patient',\n                status: 'error',\n                duration: 3000,\n            });\n        }\n    };\n\n    if (!isProvider) {\n        return (\n            <Box p={4}>\n                <form onSubmit={(e) => {\n                    e.preventDefault();\n                    handleLogin();\n                }}>\n                    <VStack spacing={4} maxW=\"400px\" mx=\"auto\">\n                        <Text fontSize=\"xl\">Provider Login</Text>\n                        <FormControl>\n                            <FormLabel>Password</FormLabel>\n                            <Input\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button type=\"submit\" colorScheme=\"blue\">\n                            Login\n                        </Button>\n                    </VStack>\n                </form>\n            </Box>\n        );\n    }\n\n    const renderPatientTable = (statusFilter: PatientStatus) => (\n        <Table variant=\"simple\">\n            <Thead>\n                <Tr>\n                    <Th>Name</Th>\n                    <Th>Triage Level</Th>\n                    <Th>Symptoms</Th>\n                    <Th>Wait Time</Th>\n                    <Th>Status</Th>\n                    <Th>Patient ID</Th>\n                </Tr>\n            </Thead>\n            <Tbody>\n                {patients\n                    .filter(p => p.status === statusFilter)\n                    .sort((a, b) => a.triageLevel - b.triageLevel)\n                    .map((patient) => (\n                        <Tr key={patient.id}>\n                            <Td>{patient.name}</Td>\n                            <Td>\n                                <Select\n                                    value={patient.triageLevel}\n                                    onChange={(e) => updateTriageLevel(patient.id, Number(e.target.value) as 1 | 2 | 3 | 4 | 5)}\n                                    variant=\"filled\"\n                                    bg={\n                                        patient.triageLevel === 1\n                                            ? 'blue.100'\n                                            : patient.triageLevel === 2\n                                            ? 'red.100'\n                                            : patient.triageLevel === 3\n                                            ? 'yellow.100'\n                                            : patient.triageLevel === 4\n                                            ? 'green.100'\n                                            : 'gray.100'\n                                    }\n                                    _hover={{\n                                        bg: patient.triageLevel === 1\n                                                ? 'blue.200'\n                                                : patient.triageLevel === 2\n                                                ? 'red.200'\n                                                : patient.triageLevel === 3\n                                                ? 'yellow.200'\n                                                : patient.triageLevel === 4\n                                                ? 'green.200'\n                                                : 'gray.200'\n                                    }}\n                                    size=\"sm\"\n                                    width=\"250px\"\n                                    borderRadius=\"md\"\n                                    fontWeight=\"medium\"\n                                    color = {patient.triageLevel === 1\n                                                ? 'blue.800'\n                                                : patient.triageLevel === 2\n                                                ? 'red.800'\n                                                : patient.triageLevel === 3\n                                                ? 'yellow.800'\n                                                : patient.triageLevel === 4\n                                                ? 'green.800'\n                                                : 'gray.800'}\n                                >\n                                    {Object.entries(TRIAGE_LEVELS).map(([level, description]) => (\n                                        <option key={level} value={level}>\n                                            {level} - {description}\n                                        </option>\n                                    ))}\n                                </Select>\n                            </Td>\n                            <Td>{patient.symptoms.join(', ')}</Td>\n                            <Td>{patient.estimatedWaitTime} mins</Td>\n                            <Td>\n                                <Select\n                                    value={patient.status}\n                                    onChange={(e) => updateStatus(patient.id, e.target.value as PatientStatus)}\n                                    variant=\"filled\"\n                                    size=\"sm\"\n                                    width=\"200px\"\n                                    borderRadius=\"md\"\n                                    fontWeight=\"medium\"\n                                >\n                                    {Object.entries(PATIENT_STATUS_LABELS).map(([status, label]) => (\n                                        <option key={status} value={status}>\n                                            {label}\n                                        </option>\n                                    ))}\n                                </Select>\n                            </Td>\n                            <Td>\n                                {patient.id}\n                            </Td>\n                        </Tr>\n                    ))}\n            </Tbody>\n        </Table>\n    );\n\n    return (\n        <Box p={4} m={2}>\n            <Box>\n                <Grid\n                    h='390px'\n                    templateRows='repeat(20, 1fr)'\n                    templateColumns='repeat(20, 1fr)'\n                    gap={4}\n                    >\n                    <GridItem colSpan={11} rowSpan={18}>\n                        <Stack spacing={6}>\n                            <Box>\n                                <Text fontSize=\"2xl\" mb={3}>Add New Patient</Text>\n                                <Stack spacing={4} maxW=\"600px\" m={2}>\n                                    <FormControl>\n                                        <FormLabel>Patient Name</FormLabel>\n                                        <Input\n                                            value={newPatient.name}\n                                            onChange={(e) =>\n                                                setNewPatient({ ...newPatient, name: e.target.value })\n                                            }\n                                        />\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel>Symptoms (comma-separated)</FormLabel>\n                                        <Input\n                                            value={newPatient.symptoms}\n                                            onChange={(e) =>\n                                                setNewPatient({ ...newPatient, symptoms: e.target.value })\n                                            }\n                                        />\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel>Triage Level</FormLabel>\n                                        <Select\n                                            value={newPatient.triageLevel}\n                                            onChange={(e) =>\n                                                setNewPatient({\n                                                    ...newPatient,\n                                                    triageLevel: e.target.value as unknown as TriageLevel,\n                                                })\n                                            }\n                                        >\n                                            {Object.entries(TRIAGE_LEVELS).map(([level, description]) => (\n                                                <option key={level} value={level}>\n                                                    {level} - {description}\n                                                </option>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                    <Button colorScheme=\"blue\" onClick={handleAddPatient}>\n                                        Add Patient\n                                    </Button>\n                                </Stack>\n                            </Box>\n                        </Stack>\n                    </GridItem>\n\n                    <GridItem colSpan={9} rowSpan={7}>\n                    \n                            <Box>\n                                <Center>\n                                <Text fontSize=\"2xl\" mb={3}>Report Average Waiting Time</Text>\n                                </Center>\n                                <Center>\n                                    <HStack>\n                                        <Editable fontSize=\"2xl\" defaultValue='5' mb={3} onChange={(value) => updateWaitTimes(value)}>\n                                            <EditablePreview />\n                                        <EditableInput />\n                                        </Editable>\n                                        <Text fontSize=\"2xl\" mb={3}> minutes</Text>\n                                    </HStack>\n                                </Center>\n                            </Box>\n                       \n                    </GridItem>\n\n                    <GridItem colStart={12} colEnd={21}>\n                      \n                            <Box>\n                            <Center>\n                                <Text fontSize=\"2xl\" mb={3}>Total Number of Patients</Text>\n                                </Center>\n                            <Center>\n                                <Text fontSize=\"2xl\" mb={3}>{patients.length}</Text>\n                                </Center>\n                            </Box>\n                   \n                    </GridItem>\n\n                </Grid>\n            </Box>                       \n\n            <Box>\n                    <Text fontSize=\"2xl\" mb={4}>Current Patients</Text>\n                    <Tabs>\n                        <TabList>\n                            <Tab>Waiting ({patients.filter(p => p.status === PatientStatus.WAITING).length})</Tab>\n                            <Tab>In Appointment ({patients.filter(p => p.status === PatientStatus.IN_APPOINTMENT).length})</Tab>\n                            <Tab>Awaiting Results ({patients.filter(p => p.status === PatientStatus.AWAITING_RESULTS).length})</Tab>\n                            <Tab>Ready for Discharge ({patients.filter(p => p.status === PatientStatus.READY_FOR_DISCHARGE).length})</Tab>\n                        </TabList>\n\n                        <TabPanels>\n                            <TabPanel>\n                                {renderPatientTable(PatientStatus.WAITING)}\n                            </TabPanel>\n                            <TabPanel>\n                                {renderPatientTable(PatientStatus.IN_APPOINTMENT)}\n                            </TabPanel>\n                            <TabPanel>\n                                {renderPatientTable(PatientStatus.AWAITING_RESULTS)}\n                            </TabPanel>\n                            <TabPanel>\n                                {renderPatientTable(PatientStatus.READY_FOR_DISCHARGE)}\n                            </TabPanel>\n                        </TabPanels>\n                    </Tabs>\n                </Box>\n        </Box>\n       \n        \n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}